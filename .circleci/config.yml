version: 2
jobs:
  upload:
    wokring_directory: ~/dj-migration-test-build
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - run:
          name: Setup Environment Variables
          command:
            echo 'export TAG=v0.2.$CIRCLE_BUILD_NUM' >> $BASH_ENV
      - run:
          name: Build package
          command: |
            python setup.py sdist
      - run:
          name: Upload package
          command: |
            pip install twine
            USERNAME=$(echo $PYPI_USR | base64 --decode)
            PASSWORD=$(echo $PYPI_PW | base64 --decode)
            twine upload dist/* -u $USERNAME -p $PASSWORD
  test:
    working_directory: ~/dj-migration-test
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - run:
          name: Install requirements
          command:
            sudo pip install -r tests/requirements.txt
      - run:
          name: Execute test suite
          command:
            coverage run -m unittest tests &&
            coverage report
  test-django-v2.2:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Setup Environment Variables
          command:
            echo 'export TAG=0.1.$CIRCLE_BUILD_NUM' >> $BASH_ENV
            echo 'export DJ_VERSION=2.2' >> $BASH_ENV
      - run: |
          docker build -t dj-migration-test/example_proj:$TAG ./examples/example_proj/. --build-arg DJ_VERSION=${DJ_VERSION}
      - run: |
          docker run dj-migration-test/example_proj:$TAG python /code/manage.py test
  test-django-v2.1:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Setup Environment Variables
          command:
            echo 'export TAG=0.1.$CIRCLE_BUILD_NUM' >> $BASH_ENV
            echo 'export DJ_VERSION=2.1' >> $BASH_ENV
      - run: |
          docker build -t dj-migration-test/example_proj:$TAG ./examples/example_proj/. --build-arg DJ_VERSION=${DJ_VERSION}
      - run: |
          docker run dj-migration-test/example_proj:$TAG python /code/manage.py test
  test-django-v2.0:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export TAG=0.1.$CIRCLE_BUILD_NUM' >> $BASH_ENV
            echo 'export DJ_VERSION=2.0' >> $BASH_ENV
      - run: |
          docker build -t dj-migration-test/example_proj:$TAG ./examples/example_proj/. --build-arg DJ_VERSION=${DJ_VERSION}
      - run: |
          docker run dj-migration-test/example_proj:$TAG python /code/manage.py test
  test-django-v1.10:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export TAG=0.1.$CIRCLE_BUILD_NUM' >> $BASH_ENV
            echo 'export DJ_VERSION=1.10' >> $BASH_ENV
      - run: |
          docker build -t dj-migration-test/example_proj:$TAG ./examples/example_proj/. --build-arg DJ_VERSION=${DJ_VERSION}
      - run: |
          docker run dj-migration-test/example_proj:$TAG python /code/manage.py test
workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - upload:
          filters:
            branches:
              only: master
          requires:
            - test
      - test-django-v1.10:
          filters:
            branches:
              only: master
          requires:
            - upload
      - test-django-v2.0:
          filters:
            branches:
              only: master
          requires:
            - upload
      - test-django-v2.1:
          filters:
            branches:
              only: master
          requires:
            - upload
      - test-django-v2.2:
          filters:
            branches:
              only: master
          requires:
            - upload
